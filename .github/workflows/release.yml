name: release
on:
  push:
    tags:
      - "v*"
permissions:
  contents: write

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
        - build: linux
          os: ubuntu-latest
          rust: stable
          target: x86_64-unknown-linux-musl
          cross: false
          platform: linux-amd64
        - build: macos
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
          cross: false
          platform: darwin-amd64
        - build: macos
          os: macos-latest
          rust: stable
          target: aarch64-apple-darwin
          cross: false
          platform: darwin-arm64
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@main
      with:
        fetch-depth: 1

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.rustup
          target
        key: ${{ runner.os }}-${{ matrix.rust }}

    - name: Install Linker
      if: matrix.cross
      run: |
        sudo apt update
        sudo apt install ${{ matrix.linker }}

    - name: Install Rust
      run: |
        rustup install ${{ matrix.rust }}
        rustup target add ${{ matrix.target }}
        rustup show

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Upload to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.platform }}
        path: target/${{ matrix.target }}/release/gh-tf-mod

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Move Artifacts
        run: |
          mv artifacts/darwin-amd64 dist/gh-tf-mod-darwin-amd64
          mv artifacts/darwin-arm64 dist/gh-tf-mod-darwin-arm64
          mv artifacts/linux-amd64 dist/gh-tf-mod-linux-amd64

      - name: Release
        run: ./scripts/release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
